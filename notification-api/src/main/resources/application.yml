server:
  port: ${SERVER_PORT:8484}

spring:
  application:
    name: notification-api
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASS}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 2s
          max-attempts: ${RABBITMQ_MAX_ATTEMPTS:5}
          multiplier: 1.5
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
  #    BETTER IF SAME SCHEMA USER
    url: jdbc:oracle:thin:@//${ORACLE_HOST}:${ORACLE_PORT}/${ORACLE_DB}
    username: ${ORACLE_USR}
    password: ${ORACLE_PASS}
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      maxLifetime: 2000000
      connectionTimeout: 30000
      poolName: HikariPoolNotif
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.OracleDialect
        "[format_sql]": true
        query:
          "[in_clause_parameter_padding]": true
        session:
          events:
            log:
              "[LOG_QUERIES_SLOWER_THAN_MS]": 10
              "[generate_statistics]": false
        jdbc:
          "[batch_size]": 100
          "[order_inserts]": true
          "[order_updates]": true
    show-sql: true

logging:
  level:
#    root: DEBUG
    org.hibernate.SQL: ${APP_LEVEL_LOG:DEBUG}
    com.microservice: ${APP_LEVEL_LOG:DEBUG}
    org.springframework: ${APP_LEVEL_LOG:DEBUG}


  file:
    path: /home/devopsa/app/logs/
  logback:
    rollingpolicy:
      clean-history-on-start: false

microservice:
  queue:
    name: ${QUEUE_NAME}
    routing-key: ${ROUTING_KEY}
    exchange: ${EXCHANGE}
  provider:
    message-signature:
      algorithm: HmacMD5
      secret-key: ${SECRET_KEY}
    parameters:
      servicio: ${SERVICIO_SMS_PROVIDER}
      emisor: ${EMISOR_SMS_PROVIDER}
      login: ${LOGIN_SMS_PROVIDER}
      password: ${PASS_SMS_PROVIDER}
      uri-auth: ${URI_SMS_PROVIDER_AUTH}
      uri-send: ${URI_SMS_PROVIDER_SEND}
      test-message: SMS PRUEBA
      timeout-ms: ${URI_SMS_PROVIDER_TIMEOUT:5000}
